Operating System
- Establish user interface
-Manages the computer's resources
- Provides resources to the application and helps to run the application on the computer

Programming Language
-language helps us to communicate with the computer
-Programming language has :
  - keywords: pre-defined wordds
  - syntax:set of rules used to write any program
  
  Type of programming languages:
   - Low level language (LLL)
     - Binary
     - Close to machine
     - Difficult to read, code
     - Faster
     - Not portable- machine dependent
     - Assembly language
   - High level language (HLL)
     - Human uderstandable language (close to how humans communicate)
     - Easier to code
     - May take more time to translate to machine understandable code
     - Portable - can run on any platform
     - Java, python
     
Python & it's features
 - Open source
 -Easier to code, learn, debug, understand
 - Huge number of library support
 - Community support
 - general purpose language
 - Portable
 - Dynamically typed
 - Memory management is automatic
 - Flexible
 - may not be fast compared to other languages as c++ or java
 
Compiler and Interpreter
  - Translators
  -is used to translate the program into machine executable code
  
Compiler
 - Translates the entire code at a time
 - Faster
 - Errors will be shown at the end of compilation
 
Interpreter
 - Translates the code line by line
 - Slower
 - Errors are shown line by line
 
Source code:
 - Code/ program that we write
 
Machine code:
 - Machine executable code
 
Intermediate code:
 - Object code: Java
 - Byte code : Python
 - Executable code: C
 
Internal working of Python
 - Source code (.py) -----> Byte code(.pyc) --- PVM (Interpreter) ----> Machine executable code
 
 Byte code (.pyc) is saved in _pycache_ folder
 
 PVM- python virtual machine
 
Errors in Python:
 
 - Compile time errors
   - Syntax error
   - Indentation error
   - If there is a compile time error, Byte code will not be generated
   - During compilation, only syntax and indentation are checked
 
 
 - Run time erros
   - Happens while the code is running after successfully compiled
   - Exceptions
   - This error stops the interpreter from executing the code and where the error has occured & displays the error message
   - Any line before the error will be executed
   - Spelling errors
   - Divide a number by 0
   - add a character with a number
   - open a file which does not exist
   
Every function comes from builtins.py like print() and every other files comes from io.py

Indentation:
 - nothing but space that you give to write the syntax of the code
 
 
A block is a combination of statements(code)

Memory management in python:
 - Allocate and deallocate the memory for effectively run the code
 - Inefficient memory management may lead to slowness of the program
 - In Python, memory management is taken care by python memory manage (PMM)-automatically done in python
 
Memory allocation:

1. Static memory allocation
 - Memory is allocated at compile time
 - Stack is used
 - Memory can not be re used
 Ex: int a=10

2.Dynamic memory allocation
 -Memory is allocated during runtime
 - Heap is used
 - Memory can be reused
 Ex:a=10
 
- In Python, dynamic memory allocation is done.So, memory management is done during runtime
PMM allocates the memory to an object and when that object is not needed, PMM automatically reclaims the memory for something else

Stack: Memory allocation on continuous memory addresses/ locations

Heap: Memory allocation is random. Heap is a pile of memory.


 
 
